@mixin generateColorClasses($map) {
  @each $key, $color in $map {
    &.#{$key} {
      background-color: $color;

      &:hover {
        @if $key =="PDF-to-PDF-A" or $key =="pdf-to-markdown" {
          background-color: lighten($color, 14%);
        }

        @else {
          background-color: darken($color, 13%);
        }
      }
    }
  }
}

.tools-page {

  // .btn {
  //   @include generateColorClasses($color-map);
  // }
  // input[type="file"]


  .download-page {
    min-height: 50vh;

    .back-btn {
      display: flex;
      width: 40px;
      height: 40px;

      .icon {
        flex: 1;
      }
    }
  }
}

.md-2pdf {
  display: flex;

  @media (max-width: 600px) {
    flex-wrap: wrap;
  }

  height: 100%;

  .editor {
    flex: 0 1 50%;
    height: 100%;
    resize: none;
  }

  .editor-loader {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-color: white;
  }

  .react-markdown-container {
    flex: 0 1 50%;
    padding: 15px;
  }
}

.upload-btn,
.submit-btn {
  font-size: 2em;
  cursor: pointer;
}

.upload-btn,
.submit-btn,
.download-btn,
.btn {
  @include generateColorClasses($color-map);
}

.file-input {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  opacity: 0;

  &::before {
    content: "";
    display: block;
    position: inherit;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    cursor: pointer;
  }
}